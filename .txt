package main

import (
	"fmt"
	"strings"
)

func main() {
	var namaApp = "Booking App"
	const totalTikets uint = 100
	var jumlahTicket uint = 100
	var timeGetTicket int = 10
	bookings := []string{}

	fmt.Println("Hello Go")
	fmt.Printf("Welcome to %v, this is web for booking with the %v/ticket\n", namaApp, totalTikets)
	fmt.Printf("and then you can get only now %v\n", timeGetTicket)	

	for {
		var firstName string
		var lastName string
		var email string
		var beliTicket uint

		fmt.Println("Input your first name:")
		fmt.Scan(&firstName)

		fmt.Println("Input your last name:")
		fmt.Scan(&lastName)

		fmt.Println("Input your email address:")
		fmt.Scan(&email)

		fmt.Println("Input total tikets:")
		fmt.Scan(&beliTicket)

		if beliTicket > jumlahTicket {
			fmt.Printf("Tiket we have %v, so you can't book %v tikets\n", jumlahTicket, beliTicket)
			break
		}

		jumlahTicket = jumlahTicket - beliTicket
		bookings = append(bookings, firstName + " " + lastName)


		fmt.Printf("Thank you %v %v for booking %v tikets. You will receive a confirmation email at %v\n", firstName, lastName, beliTicket, email)
		fmt.Printf("%v remaining tikets for %v\n", jumlahTicket, namaApp)
		

		firstNames := []string{}
		for _, booking := range bookings {
			var names = strings.Fields(booking)
			firstNames = append(firstNames, names[0])
		}
		fmt.Printf("There are all our booking: %v\n", firstNames)

		if jumlahTicket == 0 {
			fmt.Println("Tikets Soldout, Please comeback to morrow")
			break
		}
	}
}




/////////////////////////////
package utils

// import (
// 	"fmt"
// 	"net/smtp"
// )

// func SendMail(subject string, body string, to []string){
// 	auth := smtp.PlainAuth(
// 		"",
// 		"abisena1123@gmail.com",
// 		"swojswzpimauiihl",
// 		"smtp.gmail.com",
// 	)

// 	// headers := "MIME-version: 1.0;\nContent-Type: text/html; charset=\"UTF-8\";"

// 	msg := "Subject: " + subject + "\n" + body

// 	err := smtp.SendMail(
// 		"smtp.gmail.com:587",
// 		auth,
// 		"abisena1123@gmail.com",
// 		to,
// 		[]byte(msg),
// 	)

// 	if err != nil {
// 		fmt.Println(err)
// 	}
// }


////////////////////////////
package utils

import (
	"bytes"
	"fmt"
	"html/template"
	"net/smtp"
	"regexp"
	"strings"

	"github.com/microcosm-cc/bluemonday"
)

type EmailData struct {
	Subject string
	Body   string
	To     []string
}


func SendMail(data EmailData) error {
    auth := smtp.PlainAuth(
        "",
        "abisena1123@gmail.com",
        "swojswzpimauiihl",
        "smtp.gmail.com",
    )

    t, err := template.ParseFiles("./email.html")
    if err != nil {
        return err
    }

    var buf bytes.Buffer
    err = t.Execute(&buf, data)
    if err != nil {
        return err
    }

    plainText := convertHTMLToPlainText(buf.String())

    msg := fmt.Sprintf("Subject: %s\nContent-Type: text/plain; charset=UTF-8\n\n%s", data.Subject, plainText)

    err = smtp.SendMail(
        "smtp.gmail.com:587",
        auth,
        "abisena1123@gmail.com",
        data.To,
        []byte(msg),
    )

    return err
}

func convertHTMLToPlainText(html string) string {
	p := bluemonday.NewPolicy()
	p.AllowAttrs("style").OnElements("span")
	p.AllowStandardURLs()
	p.AllowElements("a", "br", "p", "ul", "ol", "li")
	p.AllowAttrs("rel").Matching(regexp.MustCompile("nofollow")).OnElements("a")
	
	plainText := p.Sanitize(html)

	// Remove HTML tags and replace line breaks with spaces
	plainText = strings.ReplaceAll(plainText, "<br>", "\n")
	plainText = strings.ReplaceAll(plainText, "</p>", "\n\n")
	plainText = strings.ReplaceAll(plainText, "</li>", "\n")
	plainText = strings.ReplaceAll(plainText, "</ul>", "\n")
	plainText = strings.ReplaceAll(plainText, "</ol>", "\n")
	plainText = strings.ReplaceAll(plainText, "<.*?>", "")

	return plainText
}

/////////
package sendtiket

import (
	"booking-app/utils"
	"fmt"
	"sync"
	"time"
)


var wg = sync.WaitGroup{}



func SendTiketUser(firstName string, lastName string, email string, beliTiket uint) {
	time.Sleep(5 *time.Second)
	var tiket = fmt.Sprintf("%v tikets akan diberikan ke %v %v", beliTiket, firstName, lastName)
	fmt.Println("#################")
	fmt.Printf("Sending ticket:\n %v \nto email address %v\n", tiket, email)

	emailData := utils.EmailData{
		Subject: "Booking app",
		Body:    "Thank You for Booking in this Web",
		To:      []string{email},
	}

	err := utils.SendMail(emailData)
	if err != nil {
		fmt.Println(err)
		return
	}
	fmt.Println("#################")
	wg.Done()
}